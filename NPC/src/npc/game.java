/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package npc;

import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author root
 */
public class game extends javax.swing.JFrame {
static BufferedImage buff;
static Image back;
static Image angry;
static int facex=0;
static int facey=0;
static int facex1=0;
static int facey1=0;
 static int size=70;
    /**
     * Creates new form game
     */
    public game() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Graphic_panel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.CardLayout());

        Graphic_panel.setMinimumSize(new java.awt.Dimension(400, 400));
        Graphic_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Graphic_panelMouseClicked(evt);
            }
        });
        Graphic_panel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Graphic_panelKeyPressed(evt);
            }
        });
        jPanel1.add(Graphic_panel, "card2");

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Graphic_panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Graphic_panelMouseClicked
        // TODO add your handling code here:
        int x=evt.getX();
        int y=evt.getY();
        Rectangle rect1=new Rectangle(facex,facey,size,size);
        Rectangle rect2=new Rectangle(facex1,facey1,size,size);
        Rectangle mouse=new Rectangle(x,y,10,10);
        if((rect1.contains(mouse))||(rect2.contains(mouse))){
            leave();
        NPCprocess.react("*partyhouse*");
        }else{
            leave();
        NPCprocess.react("*rage*");
        }
    }//GEN-LAST:event_Graphic_panelMouseClicked

    private void Graphic_panelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Graphic_panelKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Graphic_panelKeyPressed
static game win;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 win=new game();
               
               win.setMinimumSize(new Dimension(400,400));
              win.setResizable(false);
               win.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                 try {
                    back=ImageIO.read(NPC.class.getResourceAsStream("npc_trigger.jpg"));
                     angry=ImageIO.read(NPC.class.getResourceAsStream("npc_mad.jpg"));
                    win.setVisible(true);
                    render();
              new Thread(){
              @Override
              public void run(){
                  while(win.isVisible()){
                  render();
                      try {
                          Thread.sleep(100);
                      } catch (InterruptedException ex) {
                          Logger.getLogger(game.class.getName()).log(Level.SEVERE, null, ex);
                      }
                  }
              }
              }.start();
                    
                    
                } catch (Exception ex) {
                    Logger.getLogger(game.class.getName()).log(Level.SEVERE, null, ex);
                    win.dispose();
                }
            }
        });
    }
public static void clearGraphics(){

               buff=new BufferedImage(400,400,BufferedImage.TYPE_4BYTE_ABGR);
               int w= buff.getWidth();
               int h= buff.getWidth();
               Graphics2D g=buff.createGraphics();
               g.drawImage(back, 0, 0, w, h, null);
}
public static void leave(){
win.setVisible(false);
win.dispose();
}
public static void render(){
Random rand=new Random();
facex=rand.nextInt(350);
facey=rand.nextInt(350);
clearGraphics();
 Graphics2D g=buff.createGraphics();

 BufferedImage im=new BufferedImage(size,size,BufferedImage.TYPE_4BYTE_ABGR);
 Graphics2D gim=im.createGraphics();
 
gim.rotate((double)rand.nextInt(90)/10,size/2,size/2);
 gim.drawImage(angry, 0, 0, size, size, null);
g.drawImage(im, facex, facey, size, size, null);
facex1=rand.nextInt(350);
facey1=rand.nextInt(350);

 

im=new BufferedImage(size,size,BufferedImage.TYPE_4BYTE_ABGR);
 gim=im.createGraphics();
 
gim.rotate((double)rand.nextInt(90)/10,size/2,size/2);
 gim.drawImage(angry, 0, 0, size, size, null);
g.drawImage(im, facex1, facey1, size, size, null);
 paint();
}
public static void paint(){
Graphic_panel.setIcon(new ImageIcon(buff));
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel Graphic_panel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
